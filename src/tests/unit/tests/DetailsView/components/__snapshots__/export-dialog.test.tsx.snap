// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExportDialog renders with open false 1`] = `
<StyledWithResponsiveMode
  dialogContentProps={
    Object {
      "subText": "Optional: please describe the result (it will be saved in the report).",
      "title": "Provide result description",
      "type": 0,
    }
  }
  hidden={true}
  modalProps={
    Object {
      "containerClassName": "insights-dialog-main-override",
      "isBlocking": false,
    }
  }
  onDismiss={[Function]}
>
  <StyledTextFieldBase
    ariaLabel="Provide result description"
    autoFocus={true}
    multiline={true}
    onChange={[Function]}
    resizable={false}
    rows={8}
    value="description"
  />
  <StyledDialogFooterBase>
    <FlaggedComponent
      disableJSXElement={
        <CustomizedPrimaryButton
          download="THE REPORT FILE NAME"
          href="fake-url"
          onClick={[Function]}
        >
          Export
        </CustomizedPrimaryButton>
      }
      enableJSXElement={
        <React.Fragment>
          <CustomizedPrimaryButton
            aria-roledescription="split button"
            download="THE REPORT FILE NAME"
            href="fake-url"
            menuProps={
              Object {
                "items": Array [
                  Object {
                    "key": "codepen",
                    "onClick": [Function],
                    "text": "CodePen",
                  },
                ],
              }
            }
            onClick={[Function]}
            split={true}
            splitButtonAriaLabel="Export HTML to any of these format options"
            text="Export"
          />
        </React.Fragment>
      }
      featureFlag="exportReport"
      featureFlagStoreData={Object {}}
    />
  </StyledDialogFooterBase>
</StyledWithResponsiveMode>
`;

exports[`ExportDialog renders with open true 1`] = `
<StyledWithResponsiveMode
  dialogContentProps={
    Object {
      "subText": "Optional: please describe the result (it will be saved in the report).",
      "title": "Provide result description",
      "type": 0,
    }
  }
  hidden={false}
  modalProps={
    Object {
      "containerClassName": "insights-dialog-main-override",
      "isBlocking": false,
    }
  }
  onDismiss={[Function]}
>
  <StyledTextFieldBase
    ariaLabel="Provide result description"
    autoFocus={true}
    multiline={true}
    onChange={[Function]}
    resizable={false}
    rows={8}
    value="description"
  />
  <StyledDialogFooterBase>
    <FlaggedComponent
      disableJSXElement={
        <CustomizedPrimaryButton
          download="THE REPORT FILE NAME"
          href="fake-url"
          onClick={[Function]}
        >
          Export
        </CustomizedPrimaryButton>
      }
      enableJSXElement={
        <React.Fragment>
          <CustomizedPrimaryButton
            aria-roledescription="split button"
            download="THE REPORT FILE NAME"
            href="fake-url"
            menuProps={
              Object {
                "items": Array [
                  Object {
                    "key": "codepen",
                    "onClick": [Function],
                    "text": "CodePen",
                  },
                ],
              }
            }
            onClick={[Function]}
            split={true}
            splitButtonAriaLabel="Export HTML to any of these format options"
            text="Export"
          />
        </React.Fragment>
      }
      featureFlag="exportReport"
      featureFlagStoreData={Object {}}
    />
  </StyledDialogFooterBase>
</StyledWithResponsiveMode>
`;
